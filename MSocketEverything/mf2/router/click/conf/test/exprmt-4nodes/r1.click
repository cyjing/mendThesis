// Generated by make-ip-conf.pl
// eth0 192.168.100.1 00:03:1d:0c:d3:54

// Shared IP input path and routing table
ip :: Strip(14)
    -> CheckIPHeader(INTERFACES 192.168.100.1/255.255.255.0)
    -> rt :: StaticIPLookup(
	192.168.100.1/32 0,
	192.168.100.255/32 0,
	192.168.100.0/32 0,
	192.168.100.0/255.255.255.0 1,
	255.255.255.255/32 0.0.0.0 0,
	0.0.0.0/32 0,
	0.0.0.0/0.0.0.0 192.168.100.2 1);

// ARP responses are copied to each ARPQuerier and the host.
arpt :: Tee(2);

// Input and output paths for eth0
c0 :: Classifier(12/0806 20/0001, 12/0806 20/0002, 12/0800, -);
FromDevice(eth0) -> c0;
out0 :: Queue(200) -> todevice0 :: ToDevice(eth0);
c0[0] -> ar0 :: ARPResponder(192.168.100.1 00:03:1d:0c:d3:54) -> out0;
arpq0 :: ARPQuerier(192.168.100.1, 00:03:1d:0c:d3:54) -> out0;
c0[1] -> arpt;
arpt[0] -> [1]arpq0;
c0[2] -> Paint(1) -> ip;
c0[3] -> Print("eth0 non-IP") -> Discard;

// Local delivery
toh :: ToHost;
arpt[1] -> toh;
rt[0] -> IPReassembler -> ping_ipc :: IPClassifier(icmp type echo, -);
ping_ipc[0] -> ICMPPingResponder -> [0]rt;
ping_ipc[1] -> EtherEncap(0x0800, 1:1:1:1:1:1, 2:2:2:2:2:2) -> toh;

// Forwarding path for eth0
rt[1] -> DropBroadcasts
    -> cp0 :: PaintTee(1)
    -> gio0 :: IPGWOptions(192.168.100.1)
    -> FixIPSrc(192.168.100.1)
    -> dt0 :: DecIPTTL
    -> fr0 :: IPFragmenter(1500)
    -> [0]arpq0;
dt0[1] -> ICMPError(192.168.100.1, timeexceeded) -> rt;
fr0[1] -> ICMPError(192.168.100.1, unreachable, needfrag) -> rt;
gio0[1] -> ICMPError(192.168.100.1, parameterproblem) -> rt;
cp0[1] -> ICMPError(192.168.100.1, redirect, host) -> rt;
